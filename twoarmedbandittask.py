# -*- coding: utf-8 -*-
"""TwoArmedBanditTask.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IFvtdN7YXo0s-dNrWgikCpAKerP458AW
"""
"""
Implementing the exact same experimental design that the mouse went through.
"""

import numpy as np

class TwoArmedBanditTask:
  
  def __init__(
      self,
      total_trials,
      reward_prob):
    
    self._total_trials = total_trials #len(mousedata)
    self._reward_prob = reward_prob #provided from mouse_reward_probabilites
    self._current_index = 0 # trial counter to detect a new session 
  
  def next_trial(self,choice):
    # Access the reward probability associated with the choice that the agent made
    reward_prob_trial = self._reward_prob[self._current_index, choice]
    # Sample a reward with this probability
    reward = np.random.binomial(1, reward_prob_trial)
    self._current_index += 1
    return reward